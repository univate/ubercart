<?php
// $Id: uc_google_checkout.install,v 1.3 2010-02-01 16:53:50 islandusurper Exp $

/**
 * @file
 * Install file for the Ubercart Google Checkout module.
 */

/**
 * Implementation of hook_requirements().
 */
function uc_google_checkout_requirements($phase) {
  $t = get_t();

  $has_simplexml = class_exists('SimpleXMLElement');
  $requirements['uc_gc_simplexml'] = array(
    'title' => $t('SimpleXML'),
    'value' => $has_simplexml ? $t('Enabled') : $t('Not found'),
  );
  if (!$has_simplexml) {
    $requirements['uc_gc_simplexml']['severity'] = REQUIREMENT_ERROR;
    $requirements['uc_gc_simplexml']['description'] = $t('Google Checkout requires the PHP <a href="!simplexml_url">SimpleXML</a> library.', array('!simplexml_url' => 'http://php.net/manual/en/simplexml.setup.php'));
  }

  return $requirements;
}

function uc_google_checkout_schema() {
  $schema = array();

  $schema['uc_gc_products'] = array(
    'fields' => array(
      'vid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'gc_salable' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
    ),
    'primary key' => array('vid'),
    'foreign keys' => array(
      'nid' => array('uc_products' => 'nid'),
      'vid' => array('uc_products' => 'vid'),
    ),
  );

  $schema['uc_gc_orders'] = array(
    'fields' => array(
      'order_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'gc_order_number' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '0',
      ),
      'financial_state' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => 'REVIEWING',
      ),
      'fulfillment_state' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => 'NEW',
      ),
      'gc_total' => array(
        'type' => 'numeric',
        'precision' => 16,
        'scale' => 5,
        'not null' => TRUE,
        'default' => 0.0,
      ),
    ),
    'indexes' => array(
      'gc_order_number' => array(array('gc_order_number', 20)),
    ),
    'primary key' => array('order_id'),
    'foreign keys' => array(
      'order_id' => array('uc_orders' => 'order_id'),
    ),
  );

  $schema['uc_gc_taxes'] = array(
    'fields' => array(
      'zone' => array(
        'type' => 'varchar',
        'length' => 2,
        'not null' => TRUE,
        'default' => '',
      ),
      'rate' => array(
        'type' => 'float',
        'not null' => TRUE,
        'default' => 0.0,
      ),
      'tax_shipping' => array(
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('zone'),
  );

  return $schema;
}

function uc_google_checkout_install() {
  $t = get_t();
  db_query("INSERT INTO {uc_order_statuses} (order_status_id, title, state, weight, locked) VALUES ('in_google_checkout', '". $t('In Google Checkout') ."', 'in_checkout', -7, 1);");
  db_query("INSERT INTO {uc_order_statuses} (order_status_id, title, state, weight, locked) VALUES ('chargeable', '". $t('Chargeable') ."', 'post_checkout', 2, 1);");
}

function uc_google_checkout_uninstall() {
  db_query("UPDATE {uc_order_statuses} SET locked = 0 WHERE order_status_id = 'in_google_checkout' OR order_status_id = 'chargeable'");
  db_query("DELETE FROM {variable} WHERE name LIKE 'uc_google_checkout_%%'");
}

