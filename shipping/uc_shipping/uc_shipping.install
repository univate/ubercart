<?php
// $Id: uc_shipping.install,v 1.9 2010-03-03 19:34:13 islandusurper Exp $

/**
 * @file
 * Install hooks for uc_shipping.module.
 */

/**
 * Implement hook_schema().
 */
function uc_shipping_schema() {
  $schema = array();

  $schema['uc_shipments'] = array(
    'fields' => array(
      'sid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'order_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'o_first_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'o_last_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'o_company' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'o_street1' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'o_street2' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'o_city' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'o_zone' => array(
        'type' => 'int',
        'size' => 'medium',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'o_postal_code' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'o_country' => array(
        'type' => 'int',
        'size' => 'medium',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'd_first_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'd_last_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'd_company' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'd_street1' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'd_street2' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'd_city' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'd_zone' => array(
        'type' => 'int',
        'size' => 'medium',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'd_postal_code' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'd_country' => array(
        'type' => 'int',
        'size' => 'medium',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'shipping_method' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'accessorials' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'carrier' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'transaction_id' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'tracking_number' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'ship_date' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'expected_delivery' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'cost' => array(
        'type' => 'numeric',
        'precision' => 16,
        'scale' => 5,
        'not null' => TRUE,
        'default' => 0.0,
      ),
    ),
    'primary key' => array('sid'),
    'foreign keys' => array(
      'order_id' => array('uc_orders' => 'order_id'),
    ),
  );

  $schema['uc_packages'] = array(
    'fields' => array(
      'package_id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'order_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'shipping_type' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'pkg_type' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'length' => array(
        'type' => 'float',
        'not null' => FALSE,
      ),
      'width' => array(
        'type' => 'float',
        'not null' => FALSE,
      ),
      'height' => array(
        'type' => 'float',
        'not null' => FALSE,
      ),
      'length_units' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'value' => array(
        'type' => 'numeric',
        'precision' => 16,
        'scale' => 5,
        'not null' => FALSE,
        'default' => 0.0,
      ),
      'sid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'tracking_number' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'label_image' => array(
        'type' => 'integer',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('package_id'),
    'foreign keys' => array(
      'order_id' => array('uc_orders' => 'order_id'),
      'shipping_type' => array('uc_quote_shipping_types' => 'shipping_type'),
      'sid' => array('uc_shipments' => 'sid'),
      'label_image' => array('file' => 'fid'),
    ),
  );

  $schema['uc_packaged_products'] = array(
    'fields' => array(
      'package_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'order_product_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'qty' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('package_id', 'order_product_id'),
    'foreign keys' => array(
      'package_id' => array('uc_packages' => 'package_id'),
      'order_product_id' => array('uc_order_products' => 'order_product_id'),
    ),
  );

  return $schema;
}

/**
 * Change {uc_packages}.label_image to an integer file id.
 */
function uc_shipping_update_7000(&$sandbox) {
  $sandbox['#finished'] = 0;

  $schema = array(
    'type' => 'integer',
    'unsigned' => TRUE,
    'not null' => FALSE,
  );

  if (!isset($sandbox['total'])) {
    db_add_field('uc_packages', 'label_image_id', $schema);

    $sandbox['last'] = 0;
    $sandbox['count'] = 0;
    $sandbox['total'] = db_query("SELECT COUNT(*) FROM {uc_packages} WHERE label_image IS NOT NULL")->fetchField();
  }
  else {
    $found = FALSE;
    $scheme = variable_get('file_default_scheme', 'public');

    if ($sandbox['total']) {
      $limit = 200;
      $images = array();

      $packages = db_query("SELECT package_id, label_image FROM {uc_packages} WHERE package_id > :package_id AND label_image IS NOT NULL", 0, $limit, array(':package_id' => $sandbox['last']));

      foreach ($packages as $package) {
        $found = TRUE;

        $stat = stat($package->label_image);
        $info = getimagesize($package->label_image);
        $file = array(
          'uid' => 1,
          'filename' => basename($package->label_image),
          'uri' => file_stream_wrapper_uri_normalize($scheme . '://' . $package->label_image),
          'filemime' => $info['mime'],
          'filesize' => $stat['size'],
          'status' => FILE_STATUS_PERMANENT,
          'timestamp' => $stat['ctime'],
        );

        $fid = db_insert('file')->fields($file)->execute();

        db_update('uc_packages')
          ->fields(array('label_image_id' => $fid))
          ->condition('package_id', $package->package_id)
          ->execute();

        $sandbox['last'] = $package->package_id;
        $sandbox['count']++;
        $sandbox['message'] = check_plain($package->label_image);
      }

      $sandbox['#finished'] = min(0.99, $sandbox['count'] / $sandbox['total']);
    }
  }

  if (!$found) {
    db_drop_field('uc_pacakges', 'label_image');
    db_change_field('uc_packages', 'label_image_id', 'label_image', $schema, array(
      'foreign keys' => array(
        'label_image' => array('file' => 'fid'),
      ),
    ));

    return t('!number label images moved to the file table.', array('!number' => $sandbox['total']));
  }
}

