<?php
// $Id: uc_order.install,v 1.7 2007-10-02 18:11:57 rszrama Exp $

/**
 * Implementation of hook_install().
 */
function uc_order_install(){
  $t = get_t();

  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      db_query("CREATE TABLE {uc_orders} (
        order_id mediumint(9) NOT NULL,
        uid mediumint(9) NOT NULL,
        order_status varchar(32) NOT NULL,
        order_total decimal(10,2) NOT NULL,
        primary_email varchar(96) NOT NULL,
        delivery_first_name varchar(32) NOT NULL,
        delivery_last_name varchar(32) NOT NULL,
        delivery_phone varchar(32) NOT NULL,
        delivery_company varchar(64) NOT NULL,
        delivery_street1 varchar(64) NOT NULL,
        delivery_street2 varchar(64) NOT NULL,
        delivery_city varchar(32) NOT NULL,
        delivery_zone mediumint(9) NOT NULL,
        delivery_postal_code varchar(10) NOT NULL,
        delivery_country mediumint(9) NOT NULL,
        billing_first_name varchar(32) NOT NULL,
        billing_last_name varchar(32) NOT NULL,
        billing_phone varchar(32) NOT NULL,
        billing_company varchar(64) NOT NULL,
        billing_street1 varchar(64) NOT NULL,
        billing_street2 varchar(64) NOT NULL,
        billing_city varchar(32) NOT NULL,
        billing_zone mediumint(9) NOT NULL,
        billing_postal_code varchar(10) NOT NULL,
        billing_country mediumint(9) NOT NULL,
        payment_method varchar(32) NOT NULL,
        created int(11) NOT NULL,
        modified int(11) NOT NULL,
        PRIMARY KEY (order_id),
        KEY uid (uid),
        KEY order_status (order_status)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");
      db_query("CREATE TABLE {uc_order_admin_comments} (
        comment_id mediumint(9) NOT NULL auto_increment,
        order_id mediumint(9) NOT NULL,
        uid mediumint(9) NOT NULL,
        message text NOT NULL,
        created int(11) NOT NULL,
        PRIMARY KEY (comment_id),
        KEY order_id (order_id)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");
      db_query("CREATE TABLE {uc_order_comments} (
        comment_id mediumint(9) NOT NULL auto_increment,
        order_id mediumint(9) NOT NULL,
        uid mediumint(9) NOT NULL,
        order_status tinyint(4) NOT NULL,
        notified tinyint(4) NOT NULL,
        message text NOT NULL,
        created int(11) NOT NULL,
        PRIMARY KEY (comment_id),
        KEY order_id (order_id)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");
      db_query("CREATE TABLE {uc_order_line_items} (
        line_item_id mediumint(9) NOT NULL auto_increment,
        order_id mediumint(9) NOT NULL,
        type varchar(32) NOT NULL,
        title varchar(128) NOT NULL,
        amount decimal(10,2) NOT NULL,
        weight smallint(6) NOT NULL,
        PRIMARY KEY (line_item_id),
        KEY order_id (order_id)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");
      db_query("CREATE TABLE {uc_order_log} (
        order_log_id mediumint(9) NOT NULL auto_increment,
        order_id mediumint(9) NOT NULL,
        uid mediumint(9) NOT NULL,
        changes text NOT NULL,
        created int(11) NOT NULL,
        PRIMARY KEY (order_log_id),
        KEY order_id (order_id)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");
      db_query("CREATE TABLE {uc_order_products} (
        order_product_id int(9) NOT NULL auto_increment,
        order_id mediumint(9) NOT NULL,
        nid mediumint(9) NOT NULL,
        title varchar(128) NOT NULL,
        manufacturer varchar(32) NOT NULL,
        model varchar(32) NOT NULL,
        qty smallint(6) NOT NULL,
        cost decimal(10,2) NOT NULL,
        price decimal(10,2) NOT NULL,
        weight float NOT NULL,
        data text NOT NULL,
        PRIMARY KEY (order_product_id),
        KEY order_id (order_id)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");
      db_query("CREATE TABLE {uc_order_statuses} (
        order_status_id varchar(32) NOT NULL,
        title varchar(48) NOT NULL,
        state varchar(32) NOT NULL,
        weight smallint(9) NOT NULL,
        locked tinyint(4) NOT NULL,
        PRIMARY KEY  (order_status_id)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");
      db_query("INSERT INTO {uc_order_statuses} (order_status_id, title, state, weight, locked) VALUES "
              ."('canceled', '". $t('Canceled') ."', 'canceled', -20, 1), "
              ."('in_checkout', '". $t('In checkout') ."', 'in_checkout', -10, 1), "
              ."('pending', '". $t('Pending') ."', 'post_checkout', 0, 1), "
              ."('processing', '". $t('Processing') ."', 'post_checkout', 10, 1), "
              ."('completed', '". $t('Completed') ."', 'completed', 20, 1);");
      break;
    case 'pgsql':
      db_query("CREATE TABLE {uc_orders} (
        order_id integer NOT NULL default 0,
        uid integer NOT NULL default 0,
        order_status smallint NOT NULL default 0,
        order_total decimal(10,2) NOT NULL default 0.00,
        primary_email varchar(96) NOT NULL default '',
        delivery_first_name varchar(32) NOT NULL default '',
        delivery_last_name varchar(32) NOT NULL default '',
        delivery_phone varchar(32) NOT NULL default '',
        delivery_company varchar(64) NOT NULL default '',
        delivery_street1 varchar(64) NOT NULL default '',
        delivery_street2 varchar(64) NOT NULL default '',
        delivery_city varchar(32) NOT NULL default '',
        delivery_zone integer NOT NULL defualt 0,
        delivery_postal_code varchar(10) NOT NULL default '',
        delivery_country integer NOT NULL default 0,
        billing_first_name varchar(32) NOT NULL default '',
        billing_last_name varchar(32) NOT NULL default '',
        billing_phone varchar(32) NOT NULL default '',
        billing_company varchar(64) NOT NULL default '',
        billing_street1 varchar(64) NOT NULL default '',
        billing_street2 varchar(64) NOT NULL default '',
        billing_city varchar(32) NOT NULL default '',
        billing_zone integer NOT NULL default 0,
        billing_postal_code varchar(10) NOT NULL default '',
        billing_country integer NOT NULL default 0,
        payment_method varchar(32) NOT NULL default 0,
        created integer NOT NULL default 0,
        modified integer NOT NULL default 0,
        PRIMARY KEY (order_id),
        KEY uid (uid),
        KEY order_status (order_status)
      );");
      db_query("CREATE TABLE {uc_order_admin_comments} (
        comment_id integer NOT NULL default 0,
        order_id integer NOT NULL default 0,
        uid integer NOT NULL default 0,
        message text NOT NULL default '',
        created integer NOT NULL default 0,
        PRIMARY KEY (comment_id),
        KEY order_id (order_id)
      );");
      db_query("CREATE TABLE {uc_order_comments} (
        comment_id integer NOT NULL default 0,
        order_id integer NOT NULL default 0,
        uid integer NOT NULL default 0,
        order_status smallint NOT NULL default 0,
        notified smallint NOT NULL default 0,
        message text NOT NULL default '',
        created integer NOT NULL default 0,
        PRIMARY KEY (comment_id),
        KEY order_id (order_id)
      );");
      db_query("CREATE TABLE {uc_order_line_items} (
        line_item_id integer NOT NULL default 0,
        order_id integer NOT NULL default 0,
        type varchar(32) NOT NULL default '',
        title varchar(128) NOT NULL default '',
        amount decimal(10,2) NOT NULL default 0.00,
        weight smallint NOT NULL default 0,
        PRIMARY KEY (line_item_id),
        KEY order_id (order_id)
      );");
      db_query("CREATE TABLE {uc_order_log} (
        order_log_id integer NOT NULL default 0,
        order_id integer NOT NULL default 0,
        uid integer NOT NULL default 0,
        changes text NOT NULL default '',
        created integer NOT NULL default 0,
        PRIMARY KEY (order_log_id),
        KEY order_id (order_id)
      );");
      db_query("CREATE TABLE {uc_order_products} (
        order_product_id integer NOT NULL default 0,
        order_id integer NOT NULL default 0,
        nid integer NOT NULL default 0,
        title varchar(128) NOT NULL default '',
        manufacturer varchar(32) NOT NULL default '',
        model varchar(32) NOT NULL default '',
        qty smallint NOT NULL default 0,
        cost decimal(10,2) NOT NULL default 0.00,
        price decimal(10,2) NOT NULL default 0.00,
        weight float NOT NULL default 0.0,
        data text NOT NULL default '',
        PRIMARY KEY (order_product_id),
        KEY order_id (order_id)
      );");
      db_query("CREATE TABLE {uc_order_statuses} (
        order_status_id varchar(32) NOT NULL,
        title varchar(48) NOT NULL,
        state varchar(32) NOT NULL,
        weight smallint(9) NOT NULL,
        locked tinyint(4) NOT NULL,
        PRIMARY KEY  (order_status_id)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");
      db_query("INSERT INTO {uc_order_statuses} (order_status_id, title, state, weight, locked) VALUES "
              ."('canceled', '". $t('Canceled') ."', 'canceled', -20, 1), "
              ."('in_checkout', '". $t('In checkout') ."', 'in_checkout', -10, 1), "
              ."('pending', '". $t('Pending') ."', 'post_checkout', 0, 1), "
              ."('processing', '". $t('Processing') ."', 'post_checkout', 5, 1), "
              ."('completed', '". $t('Completed') ."', 'completed', 20, 1);");
      break;
  }
}

function uc_order_uninstall() {
  db_query("DROP TABLE {uc_orders}");
  db_query("DROP TABLE {uc_order_admin_comments}");
  db_query("DROP TABLE {uc_order_comments}");
  db_query("DROP TABLE {uc_order_line_items}");
  db_query("DROP TABLE {uc_order_log}");
  db_query("DROP TABLE {uc_order_products}");
  db_query("DROP TABLE {uc_order_statuses}");
  db_query("DELETE FROM {variable} WHERE name LIKE 'uc_order_pane_%'");
  db_query("DELETE FROM {variable} WHERE name LIKE 'uc_state_%'");
  variable_del('uc_order_number_displayed');
  variable_del('uc_order_logging');
  variable_del('uc_order_capitalize_addresses');
  variable_del('uc_ubrowser_product_select');
}

function uc_order_update_1(){
  switch ($GLOBALS['db_type']){
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("ALTER TABLE {uc_orders} CHANGE delivery_zip delivery_postal_code VARCHAR(10) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL");
      $ret[] = update_sql("ALTER TABLE {uc_orders} CHANGE billing_zip billing_postal_code VARCHAR(10) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL");
      break;
    case 'pgsql':
      $ret[] = update_sql("ALTER TABLE {uc_orders} CHANGE delivery_zip delivery_postal_code VARCHAR(10) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL default ''");
      $ret[] = update_sql("ALTER TABLE {uc_orders} CHANGE billing_zip billing_postal_code VARCHAR(10) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL default ''");
      break;
  }
  $result = db_query("SELECT order_id FROM {uc_orders} ORDER BY order_id DESC LIMIT 1");
  if ($data = db_fetch_object($result)) {
    $ret[] = update_sql("INSERT INTO {sequences} (name, id) VALUES "
                       ."('{uc_orders}_order_id', %d)", $data->order_id);
  }
  return $ret;
}

function uc_order_update_2() {
  switch ($GLOBALS['db_type']){
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("ALTER TABLE {uc_order_products} CHANGE weight weight FLOAT NOT NULL DEFAULT 0.0");
      break;
    case 'pgsql':
      $ret[] = update_sql("ALTER TABLE {uc_order_products} CHANGE weight weight FLOAT NOT NULL DEFAULT 0.0");
      break;
  }
  return $ret;
}

function uc_order_update_3() {
  // Update orders and comments to hold string values for order statuses.
  $ret[] = update_sql("ALTER TABLE {uc_orders} CHANGE order_status order_status VARCHAR(32) NOT NULL");
  $ret[] = update_sql("UPDATE {uc_orders} SET order_status = 'in_checkout' WHERE order_status = '0'");
  $ret[] = update_sql("UPDATE {uc_orders} SET order_status = 'pending' WHERE order_status = '1'");
  $ret[] = update_sql("UPDATE {uc_orders} SET order_status = 'processing' WHERE order_status = '2' OR order_status = '3'");
  $ret[] = update_sql("UPDATE {uc_orders} SET order_status = 'completed' WHERE order_status = '4'");

  $ret[] = update_sql("ALTER TABLE {uc_order_comments} CHANGE order_status order_status VARCHAR(32) NOT NULL");
  $ret[] = update_sql("UPDATE {uc_order_comments} SET order_status = 'in_checkout' WHERE order_status = '0'");
  $ret[] = update_sql("UPDATE {uc_order_comments} SET order_status = 'pending' WHERE order_status = '1'");
  $ret[] = update_sql("UPDATE {uc_order_comments} SET order_status = 'processing' WHERE order_status = '2' OR order_status = '3'");
  $ret[] = update_sql("UPDATE {uc_order_comments} SET order_status = 'completed' WHERE order_status = '4'");

  // Clean out the old order status table and redefine its structure.
  if ($_SESSION['statuses'] !== TRUE) {
    $ret[] = update_sql("ALTER TABLE {uc_order_statuses} CHANGE order_status_id order_status_id VARCHAR(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL default ''");
    $ret[] = update_sql("ALTER TABLE {uc_order_statuses} CHANGE title title VARCHAR(48) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL default ''");
    $ret[] = update_sql("ALTER TABLE {uc_order_statuses} CHANGE notify state VARCHAR(32) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL default ''");
    $ret[] = update_sql("ALTER TABLE {uc_order_statuses} ADD weight MEDIUMINT(9) NOT NULL");
    $ret[] = update_sql("ALTER TABLE {uc_order_statuses} ADD locked TINYINT NOT NULL DEFAULT '0'");
    $ret[] = update_sql("DELETE FROM {uc_order_statuses} WHERE order_status_id LIKE '_'");
    $_SESSION['statuses'] = TRUE;
  }

  // Fill the table with the new default order statuses.
  $t = get_t();
  $ret[] = update_sql("INSERT INTO {uc_order_statuses} (order_status_id, title, state, weight, locked) VALUES "
                     ."('canceled', '". $t('Canceled') ."', 'canceled', -20, 1), "
                     ."('in_checkout', '". $t('In checkout') ."', 'in_checkout', -10, 1), "
                     ."('pending', '". $t('Pending') ."', 'post_checkout', 0, 1), "
                     ."('processing', '". $t('Processing') ."', 'post_checkout', 5, 1), "
                     ."('completed', '". $t('Completed') ."', 'completed', 20, 1);");

  return $ret;
}
