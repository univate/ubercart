<?php
// $Id: uc_roles.install,v 1.2.2.4 2008-08-06 13:41:27 islandusurper Exp $

/**
 * @file
 * uc_roles module install file.
 */

/**
 * Define the table structures.
 *
 * @return
 *   The schema which contains the structure for the uc_roles module's tables.
 */
function uc_roles_schema() {
  $schema['uc_roles_products'] = array(
    'fields' => array(
      'pfid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'nid' => array(
        'description' => t('The unique identifier of a node.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'model' => array(
        'description' => t('The product identifier.'),
        'type' => 'varchar',
        'length' => 255,
        'default' => NULL,
      ),
      'rid' => array(
        'description' => t('The role id.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'duration' => array(
        'description' => t('How long this role is valid for.'),
        'type' => 'int',
        'size' => 'small',
        'default' => NULL,
      ),
      'granularity' => array(
        'type' => 'varchar',
        'length' => 32,
        'default' => NULL,
      ),
      'shippable' => array(
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'by_quantity' => array(
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'uc_roles_products_pfid' => array('pfid'),
      'uc_roles_products_nid' => array('nid'),
      'uc_roles_products_model' => array('model'),
      'uc_roles_products_rid' => array('rid'),
    ),
  );

  $schema['uc_roles_expirations'] = array(
    'fields' => array(
      'uid' => array(
        'description' => t('The user id.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'rid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => t('The role id.'),
      ),
      'expiration' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'notified' => array(
        'type' => 'int',
        'size' => 'tiny',
        'default' => NULL,
      ),
    ),
    'indexes' => array(
      'uc_roles_expirations_uid' => array('uid'),
      'uc_roles_expirations_rid' => array('rid'),
    ),
  );

  return $schema;
}


/**
 * Implementation of hook_install().
 *
 * Inserts the uc_roles module's schema in the SQL database.
 */
function uc_roles_install() {
  drupal_install_schema('uc_roles');
}

/**
 * Implementation of hook_uninstall().
 *
 * Remove the variables and schema corresponding to the uc_roles module.
 */
function uc_roles_uninstall() {
  drupal_uninstall_schema('uc_roles');

  db_query("DELETE FROM {variable} WHERE name LIKE 'uc_roles_%%'");
}

function uc_roles_update_1() {
  $ret = array();

  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("ALTER TABLE {uc_roles_products} CHANGE expiration duration SMALLINT( 4 ) NULL DEFAULT NULL");
      $ret[] = update_sql("ALTER TABLE {uc_roles_products} CHANGE model model VARCHAR( 255 ) CHARACTER SET utf8 NULL");
      break;
    case 'pgsql':
      break;
  }

  return $ret;
}

function uc_roles_update_2() {
  $ret = array();

  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("ALTER TABLE {uc_roles_products} ADD shippable BOOL NOT NULL");
      break;
    case 'pgsql':
      break;
  }

  return $ret;
}

function uc_roles_update_3() {
  $ret = array();

  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("ALTER TABLE {uc_roles_products} ADD by_quantity BOOL NOT NULL");
      break;
    case 'pgsql':
      $ret[] = update_sql("ALTER TABLE {uc_roles_products} ADD by_quantity boolean NOT NULL");
      break;
  }

  return $ret;
}
